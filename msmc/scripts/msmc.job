#!/bin/sh

#SBATCH --time=12:00:00   # walltime
#SBATCH --nodes=1   # number of nodes
#SBATCH --mem-per-cpu=150000M   # memory per CPU core
#SBATCH -J "bootstrap"   # job name
#SBATCH --mail-user=ethan.tolman@gmail.com   # email address
#SBATCH --mail-type=BEGIN
#SBATCH --mail-type=END
#SBATCH --mail-type=FAIL
#SBATCH --array=1-30
#SBATCH -o %A_%a.bootstrap.out

# Set the max number of threads to use for programs using OpenMP. Should be <= ppn. Does nothing if the program doesn't use OpenMP.
export OMP_NUM_THREADS=$SLURM_CPUS_ON_NODE

# LOAD MODULES, INSERT CODE, AND RUN YOUR PROGRAMS HERE

source ~/.bashrc
conda activate msmc 


args=$#

if [[ args -eq 3 ]]
then


	mkdir ../replicate_$SLURM_ARRAY_TASK_ID
	sort -R $1 | head -2 > ../replicate_$SLURM_ARRAY_TASK_ID/pop1.txt
	sort -R $2 | head -2 > ../replicate_$SLURM_ARRAY_TASK_ID/pop2.txt
	ind1=$(head -1 ../replicate_$SLURM_ARRAY_TASK_ID/pop1.txt)
	ind2=$(tail -1 ../replicate_$SLURM_ARRAY_TASK_ID/pop1.txt)
	ind3=$(head -1 ../replicate_$SLURM_ARRAY_TASK_ID/pop2.txt)
	ind4=$(tail -1 ../replicate_$SLURM_ARRAY_TASK_ID/pop2.txt)

	for i in {1..9}
	do
	../msmc-tools-master/generate_multihetsep.py --chr $i --mask $1/JW_CDB_$ind1*.out.chr$i.bed --mask $1/JW_CDB_$ind2*.chr$i.bed --mask $1/JW_CDB_$ind3*.out.chr$i.bed --mask $1/JW_CDB_$ind4*.chr$i.bed $1/processed/JW_CDB_$ind1*chr$i.vcf.gz $1/processed/JW_CDB_$ind2*chr$i.vcf.gz $1/processed/JW_CDB_$ind3*vcf.gz $1/processed/JW_CDB_$ind4*chr$i.vcf.gz > ../replicate_$SLURM_ARRAY_TASK_ID/all_chr$i
	done

	cd ../replicate_$SLURM_ARRAY_TASK_ID
	~/msmc2/build/release/msmc2 -t 11 -I 0,1,2,3 -o $2 all_chr*
	~/msmc2/build/release/msmc2 -t 11 -I 4,5,6,7 -o $3 all_chr*
	~/msmc2/build/release/msmc2 -t 11 -I 0-4,0-5,0-6,0-7,1-4,1-5,1-6,1-7,2-4,2-5,2-6,2-7,3-4,3-5,3-6,3-7 -o cross_pop  all_chr*

	python3 ../msmc-tools-master/combineCrossCoal.py pondosa.final.txt cherry_hill.final.txt cross_pop.final.txt > ../plot/combined_boot_$SLURM_ARRAY_TASK_ID.final.txt

else 
	echo "ERROR: This script requires three arguments, a path to the data, the name of population one, and the name of population two"
fi

